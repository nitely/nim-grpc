name: CI

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  test:
    name: Nim ${{ matrix.nim }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        nim: [2.0.8, 2.2.0]
    steps:
    - uses: actions/checkout@v2
    - name: Run Interop Tests
      run: |
        docker pull nimlang/nim:${{ matrix.nim }}
        docker run --env-file .env  --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim:${{ matrix.nim }} \
        /bin/bash -c "git config --global --add safe.directory /usr/src/app && \
          apt update && \
          apt install -y make && \ 
          make install_mkcert && \
          nimble install -y --depsOnly && \
          (nimble interopserve &) && \
          sleep 10s && \
          nimble interoptest"
    - name: Run tls examples
      run: |
        docker pull nimlang/nim:${{ matrix.nim }}
        docker run --env-file .env  --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim:${{ matrix.nim }} \
        /bin/bash -c "git config --global --add safe.directory /usr/src/app && \
          apt update && \
          apt install -y make && \ 
          make install_mkcert && \
          nimble install -y --depsOnly && \
          (nimble exampleserve &) && \
          sleep 10s && \
          nimble exampleclient"
    - name: Run insecure examples
      run: |
        docker pull nimlang/nim:${{ matrix.nim }}
        docker run --env-file .env  --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim:${{ matrix.nim }} \
        /bin/bash -c "git config --global --add safe.directory /usr/src/app && \
          apt update && \
          apt install -y make && \ 
          make install_mkcert && \
          nimble install -y --depsOnly && \
          (nimble exampleserveinsecure &) && \
          sleep 10s && \
          nimble exampleclientinsecure"
    - name: Run multi-thread examples
      run: |
        docker pull nimlang/nim:${{ matrix.nim }}
        docker run --env-file .env  --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim:${{ matrix.nim }} \
        /bin/bash -c "git config --global --add safe.directory /usr/src/app && \
          apt update && \
          apt install -y make && \ 
          make install_mkcert && \
          nimble install -y --depsOnly && \
          (nimble exampleservemultithread &) && \
          sleep 10s && \
          nimble exampleclientinsecure"
    - name: Run Tests
      run: |
        docker pull nimlang/nim:${{ matrix.nim }}
        docker run --env-file .env  --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim:${{ matrix.nim }} \
        /bin/bash -c "git config --global --add safe.directory /usr/src/app && \
          apt update && \
          apt install -y make && \ 
          make install_mkcert && \
          nimble install -y --depsOnly && \
          (nimble testserve &) && \
          sleep 10s && \
          nimble testclient"
    - name: Run Go server interop tests
      run: |
        docker pull nimlang/nim:${{ matrix.nim }}
        docker run --env-file .env  --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim:${{ matrix.nim }} \
        /bin/bash -c "git config --global --add safe.directory /usr/src/app && \
          apt update && \
          apt install -y make && \ 
          make install_mkcert && \
          nimble install -y --depsOnly && \
          curl -JLO \"https://github.com/nitely/nim-grpc/releases/download/v0.1.0/go_server\" && \
          chmod +x ./go_server && \
          (nimble gointeropserve &) && \
          sleep 10s && \
          nimble interoptest2"
    - name: Run Go client interop tests
      run: |
        docker pull nimlang/nim:${{ matrix.nim }}
        docker run --env-file .env  --rm -v `pwd`:/usr/src/app -w /usr/src/app nimlang/nim:${{ matrix.nim }} \
        /bin/bash -c "git config --global --add safe.directory /usr/src/app && \
          apt update && \
          apt install -y make && \ 
          make install_mkcert && \
          nimble install -y --depsOnly && \
          curl -JLO \"https://github.com/nitely/nim-grpc/releases/download/v0.1.0/go_client\" && \
          chmod +x ./go_client && \
          (nimble interopserve &) && \
          sleep 10s && \
          nimble gointeroptest"
